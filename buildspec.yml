version: 0.2
phases:
  install:
    runtime-versions:
      java: corretto21
  pre_build:
    commands:
      - aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin 794038223418.dkr.ecr.ap-northeast-2.amazonaws.com
      - REPOSITORY_URI=794038223418.dkr.ecr.ap-northeast-2.amazonaws.com/backend-springboot
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - chmod +x ./gradlew
      - ./gradlew clean build
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG .
      - docker tag $REPOSITORY_URI:$IMAGE_TAG $REPOSITORY_URI:latest
  post_build:
    commands:
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:latest
      # deploy.sh 생성 (이미지 버전 포함)
      - echo "#!/bin/bash" > deploy.sh
      - echo "set -e" >> deploy.sh
      - echo "aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin 794038223418.dkr.ecr.ap-northeast-2.amazonaws.com" >> deploy.sh
      - echo "docker pull $REPOSITORY_URI:$IMAGE_TAG" >> deploy.sh
      - echo "docker stop server || true" >> deploy.sh
      - echo "docker rm server || true" >> deploy.sh
      - echo "docker run -d -p 8080:8080 --name server --restart always $REPOSITORY_URI:$IMAGE_TAG" >> deploy.sh
      - chmod +x deploy.sh
artifacts:
  files:
    - deploy.sh
    - appspec.yml